@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@model star_wars.Application.Common.Models.ViewModels.CatalogViewModel


@{
    ViewBag.Title = "Каталог";
    Layout = "_Layout";
}

@{
    var stringId = User.FindFirstValue(ClaimTypes.NameIdentifier ?? "") ?? string.Empty;
    var userId = (string.IsNullOrEmpty(stringId) ? Guid.Empty : Guid.Parse(stringId));
}

<div class="h-100 text-center">
    <h1>Каталог</h1>
    <a asp-action="Add" class="btn btn-light mt-2">
        <strong>Добавить персонажа</strong>
    </a>
</div>

<div class="container p-4">
    <form method="get" asp-controller="Catalog" asp-action="Index" class="mb-4">
        <div class="row border-top border-bottom border-white mb-5 py-4">
            <div class="col-12 col-lg-6 mb-4">
                <div class="form-floating row mb-4">
                    <div class="col-6 d-flex justify-content-center">
                        <label class="form-label me-2 text-nowrap text-center">Дата рождения c</label>
                    </div>
                    <div class="col-6">
                        <div class="input-group">
                            <input type="number" min="0" id="searchBirthdateFromUserInput" name="searchBirthdateFromUserInput" class="form-control bg-dark text-white" onchange="HandleBirthdayValue()">
                            <select id="searchBirthdateFromEpoch" name="searchBirthdateFromEpoch" class="form-select bg-dark text-white" onchange="HandleBirthdayValue()" style="max-width: 90px">
                                <option value="-1">ДБЯ</option>
                                <option value="1">ПБЯ</option>
                            </select>
                        </div>
                        <input hidden type="number" id="searchBirthdateFrom" name="searchBirthdateFrom">
                    </div>
                </div>
                <div class="form-floating row">
                    <div class="col-6 d-flex justify-content-center">
                        <label for="searchBirthdateTo" class="form-label text-nowrap text-center">по </label>
                    </div>
                    <div class="col-6">
                        <div class="input-group">
                            <input type="number" min="0" id="searchBirthdateToUserInput" name="searchBirthdateToUserInput" class="form-control bg-dark text-white" onchange="HandleBirthdayValue()">
                            <select id="searchBirthdateToEpoch" name="searchBirthdateToEpoch" class="form-select bg-dark text-white" onchange="HandleBirthdayValue()" style="max-width: 90px">
                                <option value="1">ПБЯ</option>
                                <option value="-1">ДБЯ</option>
                            </select>
                        </div>
                        <input hidden type="number" id="searchBirthdateTo" name="searchBirthdateTo">
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6 mb-4">
                <div class="form-floating row">
                    <div class="col-6 d-flex justify-content-center">
                        <label for="searchPlanet" class="form-label">Планета</label>
                    </div>
                    <div class="col-6">
                        <input id="searchPlanet" name="searchPlanet" type="text" class="form-control w-100 bg-dark text-white"/>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6 mb-4">
                <div class="form-floating row">
                    <div class="col-6 d-flex justify-content-center">
                        <label for="searchMovies" class="form-label">Фильмы</label>
                    </div>
                    <div class="col-6">
                        <select id="searchMovies" name="searchMovies" class="form-select w-100 bg-dark text-white">
                            <option selected hidden></option>
                            @foreach (var movie in Model.MoviesTitles)
                            {
                                if (!string.IsNullOrWhiteSpace(movie))
                                {
                                    <option value="@movie">@movie</option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="form-floating row">
                    <div class="col-6 d-flex justify-content-center">
                        <label for="searchGender" class="form-label">Пол</label>
                    </div>
                    <div class="col-6">
                        <select id="searchGender" name="searchGender" class="form-select bg-dark text-white w-100 select-style">
                            <option selected hidden></option>
                            <option value="Женский">Женский</option>
                            <option value="Мужской">Мужской</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="row justify-content-center align-items-center">
        @foreach (var character in Model.Characters)
        {
            <div class="col-12 col-sm-6 col-md-6 col-lg-4 mb-4">
                <div class="card bg-dark text-white border-white pb-sm-2">
                    <div class="row card-body">
                        <div class="col-6 col-lg-8 col-md-6 col-sm-12 d-flex flex-column justify-content-center align-items-start">
                            <h5 class="card-title text-nowrap">@character.Name</h5>
                            <h6 class="card-subtitle mb-2 text-muted">@character.OriginName</h6>
                        </div>
                        <div class="col-6 col-lg-4 col-md-6 col-sm-12 d-flex align-items-center @(userId == character.OwnerId ? "justify-content-around" : "justify-content-center")">
                            <a asp-route-id="@character.Id" asp-action="Info" class="text-white">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
                                    <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                    <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
                                </svg>
                            </a>
                            @if (userId == character.OwnerId)
                            {
                                <a asp-route-id="@character.Id" asp-action="Edit" class="text-white">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                                    </svg>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="pagination justify-content-center">
        <ul class="pagination justify-content-center">
            @if (Model.Characters.PageCount > 1)
            {
                @if (!Model.Characters.IsFirstPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.Characters.PageSize })">
                            <i class="bi bi-arrow-return-left"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.Characters.PageNumber - 1, pageSize = Model.Characters.PageSize })">
                            <i class="bi bi-caret-left-fill"></i>
                        </a>
                    </li>
                }

                @for (var i = 1; i <= Model.Characters.PageCount; i++)
                {
                    <li class="page-item @(Model.Characters.PageNumber == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.Characters.PageSize })">
                            <strong>@i</strong>
                        </a>
                    </li>
                }

                @if (!Model.Characters.IsLastPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.Characters.PageNumber + 1, pageSize = Model.Characters.PageSize })">
                            <i class="bi bi-caret-right-fill"></i>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.Characters.PageCount, pageSize = Model.Characters.PageSize })">
                            <i class="bi bi-arrow-return-right"></i>
                        </a>
                    </li>
                }
            }
        </ul>
    </div>

</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            function alignCardHeights() {
                var cards = $('.card');
                var maxCardHeight = Math.max.apply(
                    null,
                    cards.map(function() {
                        return $(this).height();
                    }).get()
                );
                cards.height(maxCardHeight);
            }
    
            alignCardHeights();
            $(window).resize(function() {
                alignCardHeights();
            });
        });
        
        function HandleBirthdayValue(){
            var selectFrom = document.getElementById("searchBirthdateFromEpoch");
            var selectTo = document.getElementById("searchBirthdateToEpoch");
            
            var userInputFrom = document.getElementById("searchBirthdateFromUserInput");
            var userInputTo = document.getElementById("searchBirthdateToUserInput");
            
            document.getElementById("searchBirthdateFrom").value = selectFrom.value * userInputFrom.value;
            document.getElementById("searchBirthdateTo").value = selectTo.value * userInputTo.value;
        }
    </script>
}